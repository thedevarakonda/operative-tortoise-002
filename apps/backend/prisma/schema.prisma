generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  avatar    String?
  bio       String?
  createdAt DateTime @default(now())
  posts Post[]
  comments  Comment[]
  receivedNotifications Notification[] @relation("Recipient")
  sentNotifications     Notification[] @relation("Sender")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  mediaUrl  String?  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  upvotes   Int      @default(0)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  comments  Comment[]
  notifications Notification[]
}

// Define the different types of notifications
enum NotificationType {
  NEW_COMMENT
  NEW_UPVOTE
}

model Notification {
  id          Int              @id @default(autoincrement())
  post        Post             @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId      Int
  recipient   User             @relation("Recipient", fields: [recipientId], references: [id])
  recipientId String
  sender      User             @relation("Sender", fields: [senderId], references: [id])
  senderId    String
  type        NotificationType
  read        Boolean          @default(false)
  isCleared   Boolean          @default(false)
  createdAt   DateTime         @default(now())
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())

  post     Post   @relation(fields: [postId], references: [id])
  postId   Int

  author   User   @relation(fields: [authorId], references: [id])
  authorId String
}